OBJECTS= dictionary.o system.o fileaccess.o float.o double.o prefix.o search.o softcore.o stack.o tools.o vm.o primitives.o bit.o lzuncompress.o mingw.o utility.o hash.o callback.o word.o curterm.o extras.o bswap.o dlfcn.o ficlblas.o mt19937ar.o mt19937-64.o
HEADERS= ficlplatform.h ficl.h ficlplatform/mingw.h
#
# Flags for shared library
TARGET =  -DWIN32 # -ansi -DFICL_ANSI  # riscos MOTO_CPU32 
SHFLAGS = # -fPIC
CFLAGS = -O3 -DNDEBUG -march=native -s -Ificlplatform $(SHFLAGS) $(TARGET)
CC     = gcc -m64
LIB    = ar cr
RANLIB = ranlib

MAJOR = 4
MINOR = 2.0

ficlw.exe: $(HEADERS) main.o libficl.a
	$(CC) main.o -o $@ libficl.a -lgdi32 -lm

lib: libficl.so.$(MAJOR).$(MINOR)

# static library build
libficl.a: $(OBJECTS)
	$(LIB) libficl.a $(OBJECTS)
	$(RANLIB) libficl.a

# shared library build
libficl.so.$(MAJOR).$(MINOR): $(OBJECTS)
	$(CC) -shared -Wl,-soname,libficl.so.$(MAJOR).$(MINOR) \
	-o libficl.so.$(MAJOR).$(MINOR) $(OBJECTS)
	ln -sf libficl.so.$(MAJOR).$(MINOR) libficl.so

main: main.o ficl.h sysdep.h libficl.so.$(MAJOR).$(MINOR)
	$(CC) main.o -o main -L. -lficl -lm
	ln -sf libficl.so.$(MAJOR).$(MINOR) libficl.so.$(MAJOR)

mingw.o: ficlplatform/mingw.c $(HEADERS)
	$(CC) $(CFLAGS) -c ficlplatform/mingw.c
	
dlfcn.o: ficlplatform/dlfcn.c $(HEADERS)
	$(CC) $(CFLAGS) -c ficlplatform/dlfcn.c

ficlplatform.h: Makefile
	$(RM) $@
	echo "#define FICL_PLATFORM_OS \"`uname`\"" >>$@
	echo "#define FICL_PLATFORM_ARCHITECTURE \"`uname -m`\"" >>$@

#
#       generic object code
#
.SUFFIXES: .cxx .cc .c .o

.c.o:
	$(CC) $(CFLAGS) -c $*.c

.cxx.o:
	$(CPP) $(CPFLAGS) -c $*.cxx

.cc.o:
	$(CPP) $(CPFLAGS) -c $*.cc
#
#       generic cleanup code
#
clean:
	$(RM) *.o *.a libficl.*
	$(RM) ficlplatform.h

clobber: clean
	$(RM) ficlw.exe

